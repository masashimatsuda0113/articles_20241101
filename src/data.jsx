// data.js
export const articles = [
    { id: 1, title: "Reactを始める", content: "Reactはとっても面白いライブラリだよ。", category: "React", tags: ["JavaScript", "ライブラリ"] },
    { id: 2, title: "JSXってなに？", content: "JSXはJavaScriptの中でHTMLみたいに書ける記述だよ。", category: "React", tags: ["JSX", "構文"] },
    { id: 3, title: "JavaScriptの基本", content: "JavaScriptはウェブの基本的なプログラミング言語だよ。", category: "JavaScript", tags: ["プログラミング", "基礎"] },
    { id: 4, title: "CSSでスタイルを変える", content: "CSSを使うとウェブページの見た目を変更できるよ。", category: "CSS", tags: ["スタイル", "デザイン"] },
    { id: 5, title: "Reactのコンポーネント", content: "コンポーネントを使うと再利用可能なUIパーツが作れるよ。", category: "React", tags: ["JavaScript", "コンポーネント"] },
    { id: 6, title: "Reactのステート管理", content: "useStateを使うとコンポーネントの状態を管理できるよ。", category: "React", tags: ["JavaScript", "フック"] },
    { id: 7, title: "CSSフレックスボックス", content: "フレックスボックスでレイアウトを柔軟に調整できるよ。", category: "CSS", tags: ["レイアウト", "デザイン"] },
    { id: 8, title: "JavaScriptの非同期処理", content: "async/awaitを使うと非同期処理が書きやすくなるよ。", category: "JavaScript", tags: ["非同期", "構文"] },
    { id: 9, title: "Reactのライフサイクル", content: "コンポーネントには生まれてから消えるまでのライフサイクルがあるよ。", category: "React", tags: ["ライフサイクル", "基礎"] },
    { id: 10, title: "CSSグリッドレイアウト", content: "グリッドを使うと複雑なレイアウトも簡単に作れるよ。", category: "CSS", tags: ["レイアウト", "デザイン"] },
    { id: 11, title: "JavaScriptのクロージャ", content: "クロージャを理解すると変数のスコープがよくわかるよ。", category: "JavaScript", tags: ["スコープ", "基礎"] },
    { id: 12, title: "Reactのカスタムフック", content: "カスタムフックを作ると共通のロジックを再利用できるよ。", category: "React", tags: ["フック", "応用"] },
    { id: 13, title: "CSSアニメーション", content: "アニメーションでウェブサイトを動きのあるものにできるよ。", category: "CSS", tags: ["アニメーション", "デザイン"] },
    { id: 14, title: "JavaScriptのプロミス", content: "Promiseを使うと非同期処理を扱いやすくなるよ。", category: "JavaScript", tags: ["非同期", "プログラミング"] },
    { id: 15, title: "Reactのコンテキスト", content: "Contextを使うとプロップドリルを避けられるよ。", category: "React", tags: ["状態管理", "応用"] },
    { id: 16, title: "CSSの疑似要素", content: "::beforeや::afterで装飾的な要素を追加できるよ。", category: "CSS", tags: ["装飾", "デザイン"] },
    { id: 17, title: "JavaScriptのイベント", content: "イベントリスナーでユーザーの操作に反応できるよ。", category: "JavaScript", tags: ["イベント", "基礎"] },
    { id: 18, title: "Reactのメモ化", content: "useMemoやuseCallbackで不要な再描画を防げるよ。", category: "React", tags: ["パフォーマンス", "応用"] },
    { id: 19, title: "CSSメディアクエリ", content: "メディアクエリでレスポンシブデザインを実現できるよ。", category: "CSS", tags: ["レスポンシブ", "デザイン"] },
    { id: 20, title: "JavaScriptの配列操作", content: "map()やfilter()で配列を効率的に処理できるよ。", category: "JavaScript", tags: ["配列", "プログラミング"] },
    { id: 21, title: "Reactのエラー境界", content: "エラー境界でアプリケーションのクラッシュを防げるよ。", category: "React", tags: ["エラーハンドリング", "応用"] },
    { id: 22, title: "CSSの変数", content: "CSS変数を使うとスタイルの管理が楽になるよ。", category: "CSS", tags: ["変数", "デザイン"] },
    { id: 23, title: "JavaScriptのモジュール", content: "モジュールを使ってコードを分割できるよ。", category: "JavaScript", tags: ["モジュール", "構造化"] },
    { id: 24, title: "Reactのポータル", content: "ポータルでDOMツリーの外にレンダリングできるよ。", category: "React", tags: ["レンダリング", "応用"] },
    { id: 25, title: "CSSのトランジション", content: "トランジションで滑らかな状態変化を実現できるよ。", category: "CSS", tags: ["アニメーション", "デザイン"] },
    { id: 26, title: "JavaScriptのクラス", content: "クラスを使ってオブジェクト指向プログラミングができるよ。", category: "JavaScript", tags: ["クラス", "プログラミング"] },
    { id: 27, title: "Reactのサスペンス", content: "Suspenseで非同期コンポーネントを扱えるよ。", category: "React", tags: ["非同期", "応用"] },
    { id: 28, title: "CSSのフィルター", content: "フィルターで画像効果を追加できるよ。", category: "CSS", tags: ["エフェクト", "デザイン"] },
    { id: 29, title: "JavaScriptのデストラクチャ", content: "分割代入で簡潔にコードが書けるよ。", category: "JavaScript", tags: ["構文", "基礎"] },
    { id: 30, title: "Reactのレンダープロップ", content: "レンダープロップでコンポーネントの柔軟性を高められるよ。", category: "React", tags: ["パターン", "応用"] },
    { id: 31, title: "CSSのポジショニング", content: "position属性で要素の配置を制御できるよ。", category: "CSS", tags: ["レイアウト", "基礎"] },
    { id: 32, title: "JavaScriptのジェネレータ", content: "ジェネレータで値の生成を制御できるよ。", category: "JavaScript", tags: ["関数", "応用"] },
    { id: 33, title: "Reactのフラグメント", content: "フラグメントで不要なDOM要素を減らせるよ。", category: "React", tags: ["最適化", "基礎"] },
    { id: 34, title: "CSSのBEM命名規則", content: "BEMでCSSの命名を体系化できるよ。", category: "CSS", tags: ["設計", "デザイン"] },
    { id: 35, title: "JavaScriptのスプレッド構文", content: "スプレッド構文で配列やオブジェクトを展開できるよ。", category: "JavaScript", tags: ["構文", "基礎"] },
    { id: 36, title: "Reactのカスタムコンポーネント", content: "独自のコンポーネントを作って再利用性を高めよう。", category: "React", tags: ["コンポーネント", "応用"] },
    { id: 37, title: "CSSのSass活用法", content: "Sassを使ってCSSを効率的に書けるよ。", category: "CSS", tags: ["プリプロセッサ", "デザイン"] },
    { id: 38, title: "JavaScriptの正規表現", content: "正規表現でテキストパターンを扱えるよ。", category: "JavaScript", tags: ["文字列", "応用"] },
    { id: 39, title: "Reactのテスト", content: "Jestを使ってReactコンポーネントをテストしよう。", category: "React", tags: ["テスト", "品質"] },
    { id: 40, title: "CSSのフレームワーク", content: "Bootstrapなどのフレームワークで開発を効率化できるよ。", category: "CSS", tags: ["フレームワーク", "デザイン"] },
    { id: 41, title: "JavaScriptのWebAPI", content: "WebAPIを使って様々な機能を実装できるよ。", category: "JavaScript", tags: ["API", "応用"] },
    { id: 42, title: "Reactのパフォーマンス", content: "メモ化やコード分割でパフォーマンスを改善しよう。", category: "React", tags: ["最適化", "応用"] },
    { id: 43, title: "CSSのカスタムプロパティ", content: "カスタムプロパティでテーマを管理できるよ。", category: "CSS", tags: ["変数", "デザイン"] },
    { id: 44, title: "JavaScriptのイテレータ", content: "イテレータでデータの反復処理を制御できるよ。", category: "JavaScript", tags: ["反復処理", "応用"] },
    { id: 45, title: "Reactのアクセシビリティ", content: "アクセシブルなコンポーネントを作ろう。", category: "React", tags: ["アクセシビリティ", "品質"] },
    { id: 46, title: "CSSのグラデーション", content: "グラデーションで美しい背景を作れるよ。", category: "CSS", tags: ["装飾", "デザイン"] },
    { id: 47, title: "JavaScriptのプロトタイプ", content: "プロトタイプで継承を実装できるよ。", category: "JavaScript", tags: ["オブジェクト", "応用"] },
    { id: 48, title: "Reactのセキュリティ", content: "XSSなどの脆弱性から守るための対策をしよう。", category: "React", tags: ["セキュリティ", "品質"] },
    { id: 49, title: "CSSのブラウザ対応", content: "ベンダープレフィックスで互換性を確保しよう。", category: "CSS", tags: ["互換性", "デザイン"] },
    { id: 50, title: "JavaScriptの最新機能", content: "ECMAScriptの新機能を学んで活用しよう。", category: "JavaScript", tags: ["新機能", "応用"] },
    
  ];
  